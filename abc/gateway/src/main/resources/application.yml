server:
  port: 30001
spring:
  application:
    name: gateway
  cloud:
    #网关的一个配置
    gateway:
      #路由的配置信息
      #routes -> List<RouteDefinition>
      routes:
        # 可以配置多个路由规则，每一个代表，List集合中的元素信息
        #RouteDefinition
        - id: toBaidu
          # 当前路由的断言规则
          # ListList<PredicateDefinition>
          predicates:
          # 不同的校验的断言规则，必须全部为真，才可以进行路由转发
          # PredicateDefinition
          # 根据路径匹配断言规则
            - Path=/
          # List<FilterDefinition>
          #filters:
          uri: https://www.baidu.com
#        - id: toQQ
#          # 当前路由的断言规则
#          predicates:
#            # 当多个路由规则拦截的路径一致时，先加载的先访问，后加载的无效
#            - Path=/
#          uri: http://www.qq.com
        - id: toBaiduNews
          predicates:
            - Path=/guonei, /guoji
          uri: https://news.baidu.com/


        - id: toA
          # 断言规则，如果全部匹配才会请求转发，如果没有匹配，则页面显示的是404
          predicates:
            # 指定拦截的路径断言规则
            - Path=/a/activity/**, /abc/**
            # 指定时间之后允许访问的断言规则
            - After=2022-10-09T19:40:10.870+08:00[Asia/Shanghai]
#            # 指定时间之前允许访问的断言规则
#            - Before=2022-10-09T21:40:10.870+08:00[Asia/Shanghai]
#           # 指定时间之间允许访问的断言规则
#            - Between=2022-10-09T19:40:10.870+08:00[Asia/Shanghai],2022-10-09T21:40:10.870+08:00[Asia/Shanghai]
#            #指定Cookie允许访问的断言规则
#            - Cookie=aaa, bbb
#            # 指定Header请求头
#            - Header=bb, ccc
            # 指定请求方式允许的访问规则 GET POST PUT DELETE
            #- Method=GET, POST
            #- Method=DELETE, PUT
#            # 指定请求参数允许访问的断言规则,只限定Get的键值对访问方式(再访问地址加 ？ccc=ddd)
#            - Query=ccc, ddd
          # 网关过滤器
          # List<FilterDefinition>
          filters:
            # 添加请求头的过滤器
            - AddRequestHeader=aaa, bbb
            # 添加请参数的过滤器
            - AddRequestParameter=bbb, ccc
            # 添加响应头的过滤器
            - AddResponseHeader=ccc, ddd
            # 当前请求响应时进行重定向操作
            # - RedirectTo=302, http://www.bilibili.com
            # 路径重写，将a路径重写为b路径，可以很好的保护我们不想要对外暴露的路径地址
            # http://localhost:30001/abc/01 -> http://localhost:30001/a/activity/01
            - RewritePath=/abc/?(?<segment>.*), /a/activity/$\{segment}
            # 自定义一个响应码
            # - SetStatus=404
            # 去除路径前缀，写的是几就是去除几级路径
            # http://localhost:30001/a/activity/01 -> http://localhost:30001/activity/01
            #- StripPrefix=1
          #单机访问
          #uri: http://localhost:10001
          #集群访问，负载均衡访问
          uri: lb://nacos-client-a
      discovery:
        # 动态路由规则，如果想要针对它来实现过滤器或断言操作，就需要通过代码的方式来配置了
        # http://localhost:30001/微服务名称/请求地址
        # http://localhost:30001/nacos-client-a/a/activity/01
        # http://localhost:30001/nacos-client-b/b/activity/list
        locator:
          # 是否开启动态路由操作
          enabled: true
          # 微服务名称转小写
          lower-case-service-id: true


